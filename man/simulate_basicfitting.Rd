% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_basicfitting.R
\name{simulate_basicfitting}
\alias{simulate_basicfitting}
\title{Fitting 2 simple viral infection models to influenza data}
\usage{
simulate_basicfitting(U0 = 1e+05, I0 = 0, V0 = 1, tmax = 30, dI = 1,
  dV = 2, b = 1e-05, p = 10, f = 0, e = 0, steadystate = FALSE)
}
\arguments{
\item{U0}{initial number of uninfected target cells}

\item{I0}{initial number of infected target cells}

\item{V0}{initial number of infectious virions}

\item{tmax}{maximum simulation time, units depend on choice of units for your
parameters}

\item{dI}{rate at which infected cells die}

\item{dV}{rate at which infectious virus is cleared}

\item{b}{rate at which virus infects cells}

\item{p}{rate at which infected cells produce virus}

\item{f}{strength of cell infection reduction by drug (0-1)}

\item{e}{strength of virus production reduction by drug (0-1)}

\item{X0}{initial level of immune response}

\item{n}{rate of new uninfected cell replenishment}

\item{dU}{rate at which uninfected cells die}
}
\value{
The function returns the output from the odesolver as a matrix,
with one column per compartment/variable. The first column is time.
}
\description{
This function runs a simulation of a compartment model
using a set of ordinary differential equations.
The model describes a simple viral infection system in the presence of drug treatment.
The user provides initial conditions and parameter values for the system.
The function simulates the ODE using an ODE solver from the deSolve package.
The function returns a matrix containing time-series of each variable and time.
}
\details{
A simple compartmental model is simulated as a set of ordinary differential
equations, using an ode solver from the deSolve package.
}
\section{Warning}{
 This function does not perform any error checking. So if
  you try to do something nonsensical (e.g. specify negative parameter or starting values,
  the code will likely abort with an error message
}

\examples{
# To run the simulation with default parameters just call this function
result <- simulate_virus_tx()
# To choose parameter values other than the standard one, specify them e.g. like such
result <- simulate_virus_tx(V0 = 100, tmax = 100, n = 1e5, dU = 1e-2)
# You should then use the simulation result returned from the function, e.g. like this:
plot(result[,1],result[,4],xlab='Time',ylab='Virus',type='l',log='y')
}
\seealso{
See the shiny app documentation corresponding to this simulator
function for more details on this model. See the manual for the deSolve
package for details on the underlying ODE simulator algorithm.
}
\author{
Andreas Handel
}
